//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RateCalculatorClient.RateCalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RateCalculatorEntity", Namespace="http://schemas.datacontract.org/2004/07/RateCalculatorService")]
    [System.SerializableAttribute()]
    public partial class RateCalculatorEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowerstProductRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProductRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgramIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProgramRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LowerstProductRate {
            get {
                return this.LowerstProductRateField;
            }
            set {
                if ((this.LowerstProductRateField.Equals(value) != true)) {
                    this.LowerstProductRateField = value;
                    this.RaisePropertyChanged("LowerstProductRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProductRate {
            get {
                return this.ProductRateField;
            }
            set {
                if ((this.ProductRateField.Equals(value) != true)) {
                    this.ProductRateField = value;
                    this.RaisePropertyChanged("ProductRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProgramId {
            get {
                return this.ProgramIdField;
            }
            set {
                if ((this.ProgramIdField.Equals(value) != true)) {
                    this.ProgramIdField = value;
                    this.RaisePropertyChanged("ProgramId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgramName {
            get {
                return this.ProgramNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramNameField, value) != true)) {
                    this.ProgramNameField = value;
                    this.RaisePropertyChanged("ProgramName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ProgramRate {
            get {
                return this.ProgramRateField;
            }
            set {
                if ((this.ProgramRateField.Equals(value) != true)) {
                    this.ProgramRateField = value;
                    this.RaisePropertyChanged("ProgramRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RateCalService.IRateCalculatorService")]
    public interface IRateCalculatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateCalculatorService/GetLowerestProductRate", ReplyAction="http://tempuri.org/IRateCalculatorService/GetLowerestProductRateResponse")]
        RateCalculatorClient.RateCalService.RateCalculatorEntity GetLowerestProductRate(int ProductId, int ProgramId, System.DateTime StartDate, System.DateTime EndtDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateCalculatorService/GetLowerestProductRate", ReplyAction="http://tempuri.org/IRateCalculatorService/GetLowerestProductRateResponse")]
        System.Threading.Tasks.Task<RateCalculatorClient.RateCalService.RateCalculatorEntity> GetLowerestProductRateAsync(int ProductId, int ProgramId, System.DateTime StartDate, System.DateTime EndtDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateCalculatorService/GetAllProducts", ReplyAction="http://tempuri.org/IRateCalculatorService/GetAllProductsResponse")]
        System.Collections.Generic.List<RateCalculatorClient.RateCalService.RateCalculatorEntity> GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateCalculatorService/GetAllProducts", ReplyAction="http://tempuri.org/IRateCalculatorService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<RateCalculatorClient.RateCalService.RateCalculatorEntity>> GetAllProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRateCalculatorServiceChannel : RateCalculatorClient.RateCalService.IRateCalculatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RateCalculatorServiceClient : System.ServiceModel.ClientBase<RateCalculatorClient.RateCalService.IRateCalculatorService>, RateCalculatorClient.RateCalService.IRateCalculatorService {
        
        public RateCalculatorServiceClient() {
        }
        
        public RateCalculatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RateCalculatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RateCalculatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RateCalculatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RateCalculatorClient.RateCalService.RateCalculatorEntity GetLowerestProductRate(int ProductId, int ProgramId, System.DateTime StartDate, System.DateTime EndtDate) {
            return base.Channel.GetLowerestProductRate(ProductId, ProgramId, StartDate, EndtDate);
        }
        
        public System.Threading.Tasks.Task<RateCalculatorClient.RateCalService.RateCalculatorEntity> GetLowerestProductRateAsync(int ProductId, int ProgramId, System.DateTime StartDate, System.DateTime EndtDate) {
            return base.Channel.GetLowerestProductRateAsync(ProductId, ProgramId, StartDate, EndtDate);
        }
        
        public System.Collections.Generic.List<RateCalculatorClient.RateCalService.RateCalculatorEntity> GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<RateCalculatorClient.RateCalService.RateCalculatorEntity>> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
    }
}
